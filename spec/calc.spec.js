const script = require('../calc/calc.js');
const calc = script.calc; // передали функцию в файле.

describe('Функция calc.summ()', () => {
    it('должна возвращать 5 при аргументах (3, 2)', () => {
        expect(calc.sum(3, 2)).toBe(5);
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах (null, 2)', () => {
        expect(calc.sum(null, 2)).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах (2, null)', () => {
        expect(calc.sum(2, null)).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах ("2", 2)', () => {
        expect(calc.sum("2", 2)).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах (2, "2")', () => {
        expect(calc.sum(2, "2")).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах ("2", "2")', () => {
        expect(calc.sum("2", "2")).toBe("Аргумент должен быть числом");
    });
    // it('должна возвращать null при аргументах (null, 2)', () => {
    //     expect(pow(null, 2)).toBeNull();
    // })
});

describe('Функция calc.difference', () => {
    it('должна возвращать 1 при аргументах (3, 2)', () => {
        expect(calc.difference(3, 2)).toBe(1);
    });

    it('должна возвращать -1 при аргументах (2, 3)', () => {
        expect(calc.difference(2, 3)).toBe(-1);
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах (null, 2)', () => {
        expect(calc.difference(null, 2)).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах (2, null)', () => {
        expect(calc.difference(2, null)).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах ("2", 2)', () => {
        expect(calc.difference("2", 2)).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах (2, "2")', () => {
        expect(calc.difference(2, "2")).toBe("Аргумент должен быть числом");
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах ("2", "2")', () => {
        expect(calc.difference("2", "2")).toBe("Аргумент должен быть числом");
    });
});

describe('Функция calc.multiplication', () => {
    it('должна возвращать 6 при аргументах (3, 2)', () => {
        expect(calc.multiplication(3, 2)).toBe(6);
    });

    it('должна возвращать 0 при аргументах (0, 2)', () => {
        expect(calc.multiplication(0, 2)).toBe(0);
    });

    it('должна возвращать Сообщение "Аргумент должен быть числом", при аргументах ("2", "2")', () => {
        expect(calc.multiplication("2", "2")).toBe("Аргумент должен быть числом");
    });
});

describe('Функция calc.division', () => {
    it('должна возвращать 2 при аргументах (8, 4)', () => {
        expect(calc.division(8, 4)).toBe(2);
    });

    it('должна возвращать Сообщение "На ноль делить нельзя" при аргументах (8, 0)', () => {
        expect(calc.division(8, 0)).toBe("На ноль делить нельзя");
    });
});